import React, { useEffect, useState } from 'react';
import API from '../../api/axios';
import './Reports.css'; 

const Reports = () => {
  const [reports, setReports] = useState([]);
  const [form, setForm] = useState({ period: '', type: 'Monthly' });
  const [status, setStatus] = useState('');

  useEffect(() => {
    const fetchReports = async () => {
      try {
        const res = await API.get('/reports');
        setReports(res.data || []);
      } catch (err) {
        console.error('Error fetching reports:', err);
      }
    };
    fetchReports();
  }, []);

  const handleChange = e => {
    setForm(f => ({ ...f, [e.target.name]: e.target.value }));
  };

  const handleGenerate = async e => {
    e.preventDefault();
    setStatus('');
    try {
      await API.post('/reports', form);
      setStatus('✅ Report generated successfully.');
      const res = await API.get('/reports');
      setReports(res.data || []);
    } catch (err) {
      console.error('Error generating report:', err);
      setStatus('❌ Failed to generate report.');
    }
  };

  return (
    <div className="report-container">
      <h2 className="report-title">Payroll Reports</h2>

      <form onSubmit={handleGenerate} className="report-form">
        <input
          name="period"
          value={form.period}
          onChange={handleChange}
          placeholder="Period (e.g. 2025-03 or 2025)"
          required
          className="form-input"
        />

        <select
          name="type"
          value={form.type}
          onChange={handleChange}
          className="form-select"
        >
          <option value="Monthly">Monthly</option>
          <option value="Yearly">Yearly</option>
        </select>

        <button type="submit" className="form-button">
          Generate
        </button>
      </form>

      {status && <p className="report-status">{status}</p>}

      {reports.length ? (
        <div className="overflow-x-auto">
          <table className="report-table">
            <thead>
              <tr>
                <th>Type</th>
                <th>Period</th>
                <th>Generated By</th>
                <th>Date</th>
                <th>Download</th>
              </tr>
            </thead>
            <tbody>
              {reports.map((r) => (
                <tr key={r._id}>
                  <td>{r.type}</td>
                  <td>{r.period}</td>
                  <td>{r.generatedBy?.name ?? 'Unknown'}</td>
                  <td>{new Date(r.createdAt).toLocaleDateString()}</td>
                  <td>
                    <a
                      href={`/api/reports/${r._id}/download`}
                      className="report-download-link"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      Download
                    </a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      ) : (
        <p className="no-report">No reports available.</p>
      )}
    </div>
  );
};

export default Reports;
